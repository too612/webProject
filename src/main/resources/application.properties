spring.application.name=app

# Server Configuration
server.port=8080
server.servlet.context-path=/
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true

# 소스파일에 변화가 있을 때 자동으로 서버 재 시작 설정
spring.devtools.restart.enabled=true

# 정적 리소스에 변화가 있을 때 바로 반영한다.
spring.devtools.livereload.enabled=true

# Database Configuration
# database (postgres)
# log4j 미적용 (spring.datasource.driver-class-name)
spring.datasource.driver-class-name=org.postgresql.Driver
# log4j 적용 (spring.datasource.driver-class-name)
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# log4j 미적용 (spring.datasource.url)
spring.datasource.url=jdbc:postgresql://localhost:5432/DEV
# log4j 적용 (spring.datasource.url)
#spring.datasource.url=jdbc:log4jdbc:postgresql://localhost:5432/DEV
spring.datasource.username=DEV
spring.datasource.password=dev

# MyBatis Configuration
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.type-aliases-package=com.main.app.model
mybatis.configuration.map-underscore-to-camel-case=true

# Thymeleaf Configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

# Logging Configuration
logging.level.root=INFO
logging.level.com.company=DEBUG
logging.file.name=logs/company-website.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Static Resources Configuration
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.cache.period=3600

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
